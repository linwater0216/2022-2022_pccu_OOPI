/*
請參考兩個課本範例:
TestCircleWithStaticDataFields.cpp
CircleWithConstantMemberFunctions.cpp

並以分開三個檔案的方式將其 Circle 物件修改成 Rectangle 物件，讓 Rectangle 具有 const 和 static 功能。
data fields(private) 為 width(double)、height(double)、numOfRect(int)
以及請設計建構者和 function: setWidth、getWidth、setHeight、getHeight、getArea、getNumOfRect


輸入說明：
於主程式中輸入 3 組長與寬，建立 3 個 Rectangle 物件

輸出說明：
最後輸出各個長方形的『寬(width)』、『長(height)』、『面積』、『總共有幾個長方形』。

範例輸入：
1 2 2 3 3 4

範例輸出：
1 2 2
2 3 6
3 4 12
3 Rectangles



※ 要求：int numOfRect 為紀錄長方形的個數需具有 static 功能，getNumOfRect()也須具有 static 功能，而 getWidth()、 getHeight()、getArea() 需具有 const。

*/#include <iostream>
#include <iomanip>
using namespace std;

class Rectangle
{
public:
    double width;//寬度
    double height;//高度
    double getArea()//面積
    {
        return width * height;
    }
    double getPerimeter()//周長
    {
        return (width + height) * 2;
    }
};

int main()
{
    Rectangle Rectangle1;
    Rectangle Rectangle2;
    Rectangle Rectangle3;
    cin >> Rectangle1.width >> Rectangle1.height;
    cin >> Rectangle2.width >> Rectangle2.height;
    cout << fixed << setprecision(2) << Rectangle1.getArea() << Rectangle1.getPerimeter() << endl;
    cout << fixed << setprecision(2) << Rectangle2.getArea() << Rectangle2.getPerimeter() << endl;
    Rectangle2.width = 5.0;
    Rectangle2.height = 2.5;
    cout << Rectangle2.getArea() << Rectangle2.getPerimeter() << endl;
    return 0;
}
